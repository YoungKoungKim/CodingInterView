
Spring 기본 동작 순서 및 구조는 일반적으로 CASE#1과 CASE#2로 나뉘어지는데 이 부분은 개발자의 개발방식에 따라 달라진다.

CASE#2의 경우는 Controller 뒷부분은 생략된 것이며 Controller - Service - Dao - DB 순서로 CASE#1과 동일하다.





CASE #1

  Spring_기본 동작순서_및_구조.pdf








CASE #2









a) web.xml (DispatcherServlet)

web.xml을 위에서 서블릿 배포 기술자, 영어로는 DD (Deploment Descriptor)라고 한다. 

web.xml은 WAS (Web Application Server: 여기서는 Tomcat)이 최초 기동될 때, WEB-INF 디렉토리에 존재하는 web.xml을 읽고, 그에 해당하는 웹 애플리케이션 설정을 구성한다. 



다시 말해, 각종 설정을 위한 설정파일이라고 이야기 할 수 있다.



→ DispatcherServlet 더 알아보기 (http://egloos.zum.com/springmvc/v/504151)





b) servlet-context.xml (HandlerMapping)

servlet-context는 서블릿 관련 설정이다. 여기서 주목해야하는 부분은 아래 영역이다.

1
2
3
4
<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".jsp" />
</beans:bean>
Colored by Color Scripter
cs


서블릿 설정으로 prefix(접두사)와 suffix(접미사)를 붙여주는 역할을 담당한다.  

즉, 우리가 일일이 전체경로와 .jsp를 붙이지 않아도 되도록 도와준다.



그 다음은 <context:component-scan base-package="com.company.first" /> 이다. 

이 부분은 스프링에서 사용하는 bean을 일일이 xml에 선언하지 않고도 필요한 것을 어노테이션(Annotation)으로 자동 인식하게 하는 역할을 한다.



출처: https://server-engineer.tistory.com/253 [HelloWorld]
